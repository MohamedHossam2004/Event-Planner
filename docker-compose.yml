services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: broker-service.Dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: authentication-service.Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      MAILHOG_HOST: mailhog
      MAILHOG_PORT: 1025
      MAILHOG_USERNAME: ""
      MAILHOG_PASSWORD: ""
      SENDER_EMAIL: giu-event-hub@giu-uni.de
    env_file:
      - .env

  postgres:
    image: "postgres:latest"
    ports:
      - "5433:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data

  mailhog:
    image: "mailhog/mailhog"
    platform: linux/amd64
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: "rabbitmq:4.0-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq
